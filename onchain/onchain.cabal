cabal-version: 3.0

name:                onchain
version:             0.1.0.0
synopsis:            contracts for Sundae swap application
description:         Plutus contracts to run Sundae swap application on Cardano blockchain
license-file:        ../LICENSE
author:              sundae
maintainer:          anton@mlabs.gmail edmund@sundaeswap.finance
build-type:          Simple
extra-source-files:
  factory-boot-settings.json

flag defer-plugin-errors
  description:
    Defer errors from plutus GHC plugin to runtime, mainly so we don't get annoying unfolding errors
  default: False
  manual: True

common ghc-config
  ghc-options:
    -Wall -Wno-missing-signatures -Wmissing-exported-signatures
    -Wno-partial-type-signatures
    -fplugin-opt PlutusTx.Plugin:target-version=1.0.0
  -- TODO: factor out all of these flags into a second common stanza that imports the first common stanza, except for defer plugin errors
  -- this way we can make library always have defer-plugin-errors disabled, and we can have a hie.yaml cabal cradle that just uses the other component w/ plugin errors
  -- this is kinda a fair bit of stuff to do and I imagine it's fidgety so for now it's probably more than enough to just always defer plugin errors during development
  -- to do that just do `cabal configure --flags defer-plugin-errors
  if flag(defer-plugin-errors)
    ghc-options:
      -fplugin-opt PlutusTx.Plugin:defer-errors

  default-language: Haskell2010
  default-extensions: BangPatterns
                      BlockArguments
                      ConstraintKinds
                      DataKinds
                      DeriveAnyClass
                      DeriveFoldable
                      DeriveFunctor
                      DeriveGeneric
                      DeriveLift
                      DeriveTraversable
                      DerivingStrategies
                      DerivingVia
                      ExplicitForAll
                      FunctionalDependencies
                      FlexibleContexts
                      FlexibleInstances
                      GeneralizedNewtypeDeriving
                      ImportQualifiedPost
                      LambdaCase
                      MonoLocalBinds
                      MultiParamTypeClasses
                      NamedFieldPuns
                      NumericUnderscores
                      OverloadedStrings
                      PartialTypeSignatures
                      PatternGuards
                      QuasiQuotes
                      RankNTypes
                      RecordWildCards
                      ScopedTypeVariables
                      StandaloneDeriving
                      TemplateHaskell
                      TupleSections
                      TypeApplications
                      TypeFamilies
                      TypeOperators
                      TypeSynonymInstances
                      ViewPatterns

library
  import: ghc-config
  -- Some of these are necessary for plutus to work in GHCi
  ghc-options:
    -fobject-code
    -fno-omit-interface-pragmas
    -fno-ignore-interface-pragmas
    -fno-specialise
  build-depends: base ^>= 4.16
               , aeson
               , aeson-pretty
               , base16-bytestring
               , base-compat
               , bytestring
               , containers
               , data-default
               , deepseq
               , extra
               , insert-ordered-containers
               , lens
               , mtl
               , plutus-core
               -- , plutus-contract
               , plutus-ledger-api
               , plutus-tx
               , plutus-tx-plugin
               , prettyprinter
               , pretty-show
               , random
               , splitmix
               , th-compat
               , directory
               , serialise
               , text
               , time
               , unbounded-delays
               , unliftio-core
               , yaml
               , template-haskell
               , ghc-prim

  hs-source-dirs: .
  exposed-modules:
    Sundae.Compiled
    Sundae.Compiled.Factory
    Sundae.Compiled.Mints
    Sundae.Compiled.Pool
    Sundae.Contracts
    Sundae.Contracts.Common
    Sundae.Contracts.Factory
    Sundae.Contracts.Mints
    Sundae.Contracts.Pool
    Sundae.ShallowData
    Sundae.Utilities
  default-extensions: NoImplicitPrelude

test-suite sundae-contracts-tests
  import: ghc-config
  type:               exitcode-stdio-1.0
  ghc-options:        -threaded -rtsopts
  build-depends:      base              >=4.9 && <5
                    , aeson
                    , bytestring
                    , data-default
                    , file-embed
                    -- , freer-extras
                    -- , freer-simple
                    , lens
                    , onchain
                    , mtl
                    , containers
                    , cardano-crypto-class
                    , plutus-core
                    -- , plutus-contract
                    , plutus-tx
                    , plutus-ledger-api
                    , plutus-tx-plugin
                    -- , plutus-contract
                    , prettyprinter
                    , pretty-show
                    , record-hasfield
                    , tasty
                    , tasty-hunit
                    , tasty-expected-failure
                    , tasty-quickcheck
                    , QuickCheck
                    , text
                    , serialise
                    , time
  hs-source-dirs:     test
  main-is:            Main.hs
  other-modules:
    Test.Contracts.SundaeScooperCompat
    Test.Contracts.Orphans
    Test.Contracts.Pool
    Test.Contracts.Utils
